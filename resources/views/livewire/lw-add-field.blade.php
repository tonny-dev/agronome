<div>

    <div class="mt-6 mb-6 progress">
        <div class="pt-5 md:pt-0 lg:pt-0">
            <div class="flex items-center">
                <div class="flex items-center relative">
                    <div class="rounded-full transition duration-500 ease-in-out h-7 w-7 py-3 border-2 nav_color">
                    </div>
                    <div class="absolute top-0 -ml-10 text-center mt-6 w-32 text-normal font-medium active_nav_button">
                        Location
                    </div>
                </div>
                <div class="flex-auto border-t-2 border-green-500"></div>
                <div class="flex items-center active_nav_button relative">
                    <div class="rounded-full transition duration-500 ease-in-out h-7 w-7 py-3 border-2 nav_color">
                    </div>
                    <div class="absolute top-0 -ml-10 text-center mt-6 w-32 text-normal font-medium active_nav_button">
                        Details
                    </div>
                </div>
                <div class="flex-auto border-t-2 transition duration-500 ease-in-out border-green-500"></div>
                <div class="flex items-center active_nav_button relative">
                    <div class="rounded-full transition duration-500 ease-in-out h-7 w-7 py-3 border-2 nav_color">
                    </div>
                    <div class="absolute top-0 -ml-10 text-center mt-6 w-32 text-normal font-medium active_nav_button">
                        Layout
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{-- Upper Second  Buttons --}}
    <div class="md:px-0 md:mt-0">
        <div class="md:flex gap-4 lg:mt-0 mb-2 md:mt-0 mt-0 md:justify-between">
            {{-- Farming Type --}}
            <div class="relative inline-block md:w-64 w-full mt-4 md:mt-0">
                <select id="cbx-farming-type" name="farming_type" wire:model.defer="farming_type" class="block appearance-none w-full bg-white border  px-4 py-2 pr-8 rounded-xl shadow leading-tight focus:outline-none focus:shadow-outline focus">
                    @foreach($farming_types as $farming_type)
                    <option value="{{$farming_type->id}}" input type="hidden">{{$farming_type->value}}
                    </option>
                    @endforeach
                    </option>
                </select>
                <div class="pointer-events-none absolute inset-y-0 right-0 border-l flex items-center px-2 text-gray-700">
                    <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                        <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                    </svg>
                </div>
            </div>
            {{-- Field Size --}}
            <div class="relative inline-block md:w-64 hidden md:block" id="set_fieldsize">
                <div>
                    <input wire:model="fieldSize" id="fieldSize" name="size" class="block appearance-none w-full bg-white text-gray-700 border  px-4 py-2 pr-8 rounded-lg shadow leading-tight focus:shadow-outline" type="number" placeholder="Field Size" />
                </div>
                <div>
                    <p class="absolute rounded-r-xl bg-transparent border-l inset-y-0 right-0 outline-none flex items-center px-2 text-gray-900">
                        acres
                    </p>
                </div>
            </div>
            {{-- Autogenerated Field no area and Add Button --}}
            <div class="relative inline-block md:w-64 hidden md:block">
                <div>
                    <input wire:model="field_name" id="field_name" readonly placeholder="Field Name" name="field_name" class="block appearance-none w-full bg-white border px-4 py-2 pr-8 rounded-xl shadow leading-tight focus:outline-none" />
                    <!-- <span class="pl-2 text-gray-600"> autogenerate me </span> -->
                </div>
                <div class="">
                    <button type="button" id="btn_add_field" class="absolute text-white rounded-r-xl nav_color border-l inset-y-0 right-0 outline-none flex items-center px-2">
                        Add
                    </button>
                </div>
            </div>


            <!-- Mobile view for add field and field size input -->
            <div class="md:hidden grid grid-cols-2 gap-4">
                <!-- {{-- Field Size --}} -->
                <div class="relative inline-block md:w-64 w-full mt-4 md:mt-0">
                    <div>
                        <input wire:model="fieldSize" id="mobileFieldSize" name="size" class="block appearance-none w-full bg-white text-gray-700 border  px-4 py-2 pr-8 rounded-lg shadow leading-tight focus:shadow-outline" type="number" placeholder="Field Size" />
                    </div>
                    <div>
                        <p class="absolute rounded-r-xl bg-transparent border-l inset-y-0 right-0 outline-none flex items-center px-2 text-gray-900">
                            acres
                        </p>
                    </div>
                </div>

                <!-- {{-- Autogenerated Field no area and Add Button --}} -->
                <div class="relative inline-block md:w-64 w-full mt-4 md:mt-0">
                    <div>
                        <input wire:model="field_name" id="mobile_field_name" readonly placeholder="Field Name" name="field_name" class="block appearance-none w-full bg-gray border px-4 py-2 pr-8 rounded-xl shadow leading-tight focus:outline-none" />
                        <!-- <span class="pl-2 text-gray-600"> autogenerate me </span> -->
                    </div>
                    <div class="">
                        <button type="button" id="mobile_btn_add_field" class="absolute text-white rounded-r-xl nav_color border-l inset-y-0 right-0 outline-none flex items-center px-2">
                            Add
                        </button>
                    </div>
                </div>
            </div>

        </div>



        {{--Farm usage progress state--}}
        <div wire:ignore class="mt-4">
            <p id="statusx" class="font-bold text-l"> </p>
            <div class="relative pt-1 w-full">
                <div class="overflow-hidden h-2 text-xs flex shadow-md bg-gray-100 rounded-full bg-white">
                    <div id="progbarx" style="width:0%" class="flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500">
                    </div>
                </div>
            </div>
        </div>


        <!-- <div id="progba" class="mt-4">

            <div wire:ignore class="alert alert-warning " style="display:none" role="alert" id="field_created_alert">
                {{$created_field}} has been created
            </div>

            <div wire:ignore class="progress mt-3">
                <div class="progress-bar bg-green-500" id="progbarx" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
            </div>

        </div> -->

        {{-- Table --}}
        <div class="border border-gray-200 border-b-4 rounded-lg border-t-0 mt-6" id="field_area_box">
            <div class="md:hidden">
                @livewire('lw-legal')
            </div>

            <div class="grid grid-cols-2 mx-4 mt-8">
                {{-- Table for displaying Field Size, name --}}

                <div>
                    <div class="grid grid-cols-1 md:hidden" wire:ignore>
                        <div id="mobile-name-view" class="grid place-self-center grid-cols-2 rounded text-center divide-x-2 divide-gray-300 bg-white shadow shadow-lg w-full">
                        </div>
                    </div>

                    <div class="flex flex-col" id="field_area">
                        <div class="overflow-hidden">
                            <table class="min-w-full">
                                <thead>
                                    <tr>
                                        <th scope="col" class="py-3 text-left font-medium text-gray-900">
                                            Field Name
                                        </th>
                                        <th scope="col" class="py-3 px-6 text-left font-medium text-gray-900">
                                            Field Size
                                        </th>
                                    </tr>
                                </thead>

                                <tbody id="tbody">

                                    @if($field_collection)
                                    @foreach ($field_collection as $field)
                                    <tr>
                                        <td>
                                            <div class="text-gray-500">{{ $field['field_name'] }}</div>
                                        </td>
                                        <td class="px-6">
                                            <div class="text-gray-500">{{ $field['fieldSize'] }}</div>
                                        </td>
                                    </tr>
                                    @endforeach
                                    @endif


                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>

                <!--Doughnut Chart-->

                <div wire:ignore>
                    <canvas id="myChart" width="200" height="200" style="margin-left: 20%; z-index:1; "></canvas>
                </div>

            </div>
            <div class="pl-6 pb-6 pt-4 md:pt-0 lg:mx-20 sm:mx-2">
                <button id="btn-reset" wire:click="field_reset" class="bg-transparent hover:bg-gray-100 border border-green-500 text-green-500 font-bold p-1 px-6 rounded" type="reset">Reset</button>
            </div>
        </div>

        <!-- Guide -->

        <div wire:ignore class="border font-medium border-gray-200 border-b-4 rounded-lg border-t-0 mt-6" id="guide">
            <div class="mx-20">
                <p class="underline text-xl active_nav_button">Guide</p>
                <p>Mixed Cropping involves division of your farm into different potions using <br> the <span class="text-green-400 text-xs border p-1">Field Size</span>to input the measurements of your potions.</p>
                <p>and <span class="text-green-400 text-xs border p-1">Add</span> button to confirm division.</p>
                <br>
                <p>Do you wish to continue, click</p>
                <p>~ Yes, to divide farm into different options</p>
                <p>~ No, to practice mono-cropping.</p>
                <div class="p-2 flex justify-center">

                    <button class="bg-gray-500 transition duration-500 ease-in-out transform
                        hover:scale-150 mr-6 p-1 pl-4 pr-4 rounded text-sm w-auto" id="no_to_mixed_cropping">
                        No
                    </button>
                    <button class="bg-green-500 transition duration-500 ease-in-out transform
                        hover:scale-150 text-white focus p-1 pl-4 pr-4 ml-6 rounded text-lg w-auto" id="yes_to_mixed_cropping">
                        Yes
                    </button>
                </div>
            </div>

        </div>


    </div>


    <script>
        var cumulative_size = 0;
        // var farm_size = 300;
        var allocation_array = [];
        let myChart = null;


        $("#btn_add_field, #mobile_btn_add_field").click(function() {
            let inputValue = $("#fieldSize").val();
            let mobileInputValue = $("#mobileFieldSize").val();
            farm_size = parseInt($('#farm_size').val()) || parseInt($('#farm_size_mobile').val());
            cumulative_size = cumulative_size + parseInt($("#fieldSize").val());

            if (farm_size < cumulative_size) {

                swal({
                    title: "Error",
                    text: "The field size has to be smaller than the farm size",
                    icon: "warning"
                })

                cumulative_size = cumulative_size - parseInt($("#fieldSize").val()) || cumulative_size - parseInt($("#mobileFieldSize").val());
                $('#progbarx').css("width", Math.ceil(cumulative_size / farm_size * 100) + "%");

                return;
            }

            if ((inputValue === null || inputValue < 1) || (mobileInputValue === null || mobileInputValue < 1)) {
                swal({
                    title: "Error",
                    text: "The field size cannot be smaller than 1",
                    icon: "warning"
                });
                return;
            }



            // allocation_array.push(inputValue);
            allocation_array.push(inputValue !== undefined && inputValue !== null ? inputValue : mobileInputValue);


            $('#progbarx').css("width", Math.ceil(cumulative_size / farm_size * 100) + "%");
            $("#statusx").text(cumulative_size + " of " + farm_size + " Acres used");
            $("#field_created_alert").show().text("Field " + $("#field_name").val() + " Has been added");
            window.livewire.emit('field_added', $("#farm_name").val(), $("#fieldSize" || "#mobileFieldSize").val());
            $('#fieldSize').val(0);
            $('#mobileFieldSize').val(0);
            draw(allocation_array);
        });




        var monof = true;

        $('#cbx-farming-type').change(function() {
            let selectedValue = $('#cbx-farming-type option:selected').val();

            if (selectedValue == 1009) {
                let farm_size_n = parseInt($('#farm_size').val()) || parseInt($('#farm_size_mobile').val());

                $('#guide').hide();
                $('#field_area_box').show();
                $('#field_name, #mobile_field_name, #fieldSize, #mobileFieldSize, #btn_add_field, #mobile_btn_add_field').prop('disabled', true);
                $('#mobileFieldSize, #mobile_field_name').css('background-color', '#f2f2f2');
                $('#btn-reset').hide();

                $('#progbarx').css("width", "100%");
                $("#statusx").text(farm_size_n + " acres out of " + farm_size_n + " used");

                // Display farm size in the table
                $('#tbody').html(`
                <tr>
                    <td>
                        <div class="text-gray-500">F-01-${farm_size_n}</div>
                    </td>
                    <td class="px-6 ">
                        <div class="text-gray-500">${farm_size_n}</div>
                    </td>
                </tr>`);

                // Draw allocation
                draw([farm_size_n]);
            } else if (selectedValue == 1010) {
                // Show guide and hide field area box
                $('#field_area_box').hide();
                $('#guide').show();
            }
        });



        $('#yes_to_mixed_cropping').on('click', function() {
            // Show field area box and hide guide
            $('#field_area_box').show();
            $('#guide').hide();

            // Change background color and enable form fields
            $('#fieldSize, #mobileFieldSize, #btn_add_field, #mobile_btn_add_field').css('background-color', '#fff');
            $('#field_name, #mobile_field_name, #fieldSize, #mobileFieldSize, #btn_add_field, #mobile_btn_add_field').prop('disabled', false);
        });


        $('#no_to_mixed_cropping').on('click', function() {
            $('#cbx-farming-type').val(1009).trigger('change');
            swal({
                title: "mono-cropping",
                text: "Your farm will be registered under mono-cropping. Click Finish to save",
                icon: "success"
            })
        });


        $('#btn-reset').off().on('click', function() {
            farm_size = parseInt($('#farm_size').val()) || parseInt($('#farm_size_mobile').val());

            // reset line 
            $('#progbarx').css("width", "0%");

            //reset text 
            $("#statusx").text(0 + " of " + farm_size + " Acres used");


            //reset graph
            allocation_array = []
            draw(allocation_array);
        });




        function draw(data_set) {
            const ctx = document.getElementById('myChart');

            if (myChart) {
                myChart.destroy();
            }

            myChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    // labels: data_set,
                    datasets: [{
                        label: 'Field',
                        data: data_set,
                        hoverOffset: 8,
                        borderWidth: 1
                    }]
                },
                options: {
                    cutoutPercentage: 40,
                    responsive: true,
                }
                // alert('inside the wire');
            });
        }
    </script>






</div>